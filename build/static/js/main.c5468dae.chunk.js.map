{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Header.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","Fragment","className","onSubmit","this","type","ref","required","defaultValue","Component","Order","renderOrder","key","fish","fishes","count","order","transitionOptions","classNames","timeout","enter","exit","status","name","component","price","color","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseInt","desc","image","addFish","currentTarget","reset","placeholder","EditFishForm","handleChange","updatedFish","updateFish","index","delFish","deleteFish","onChange","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","provider","authProvider","auth","signInWithPopup","then","authHandler","authData","a","async","fetch","storeId","context","store","post","data","user","setState","logout","signOut","onAuthStateChanged","loadSampleFishes","Header","tagline","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","addOrder","addToOrder","details","isAvailable","src","alt","disabled","App","Date","now","sampleFishes","localStorageRef","localStorage","getItem","match","params","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.c5468dae.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React from 'react'\r\n// import {Component} from 'react'\r\nimport {getFunName} from '../helpers'\r\n//need to import react for every component\r\nimport PropTypes from 'prop-types'\r\nclass StorePicker extends React.Component{\r\n  static propTypes = {\r\n    history: PropTypes.object\r\n  }\r\n  myInput= React.createRef()\r\n  goToStore=(event)=>{\r\n    event.preventDefault()\r\n    const storeName=this.myInput.current.value\r\n    this.props.history.push(`/store/${storeName}`)\r\n    {/*the props that get passed down aren't just the explicitly defined ones*/}\r\n  }\r\n  render(){\r\n    return(\r\n      <React.Fragment> {/*need this if you want to render two sibling elements*/}\r\n        <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter A Store</h2>\r\n        <input type=\"text\" ref={this.myInput} required defaultValue={getFunName()}/>\r\n        <button type=\"submit\">Visit Store</button>\r\n        </form>\r\n        <p>Other child</p>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default StorePicker\r\n","import React from 'react'\r\nimport {formatPrice} from '../helpers'\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Order extends React.Component {\r\n  static propTypes={\r\n    fishes: PropTypes.shape({\r\n      image:PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc:PropTypes.string,\r\n      status:PropTypes.string,\r\n      price:PropTypes.number\r\n    }),\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func\r\n  }\r\n  renderOrder = key=>{\r\n    const fish = this.props.fishes[key]\r\n    const count = this.props.order[key]\r\n    const transitionOptions={\r\n      classNames: 'order',\r\n      key,\r\n      timeout:{enter:500,exit:500}\r\n    }\r\n    //the order will load before the fish, this will prevent errors due to that\r\n    if(!fish) return null\r\n    if(fish.status!==\"available\"){\r\n      return(\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>Sorry {fish?fish.name:'fish'} is out of stock</li>\r\n        </CSSTransition>\r\n      )\r\n    }\r\n     return(\r\n       <CSSTransition {...transitionOptions}>\r\n         <li key={key}>\r\n           <span>\r\n             <TransitionGroup component='span' className=\"count\">\r\n               <CSSTransition key={count} classNames=\"count\" timeout={{enter:500,exit:500}}>\r\n                 <span>{count}</span>\r\n               </CSSTransition>\r\n             </TransitionGroup>\r\n             lbs {fish.name}\r\n             {formatPrice(count*fish.price)}\r\n             <button style={{color:'red'}} onClick={()=>this.props.removeFromOrder(key)}>Delete</button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    )\r\n   }\r\n  render(){\r\n    const orderIds = Object.keys(this.props.order)\r\n    const total = orderIds.reduce((prevTotal,key)=>{\r\n      const fish = this.props.fishes[key]\r\n      const count = this.props.order[key]\r\n      const isAvailable = fish &&fish.status===\"available\"\r\n      if(isAvailable){\r\n        return prevTotal + (count*fish.price)\r\n      }\r\n      return prevTotal\r\n    },0) //need to put zero here otherwise it crashes because order is initially empty\r\n\r\n    return(\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Order\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass AddFishForm extends React.Component {\r\n  static propTypes ={\r\n    addFish: PropTypes.func\r\n  }\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  createFish = event=>{\r\n    event.preventDefault()\r\n    const fish ={\r\n      name:this.nameRef.current.value,\r\n      price:parseInt(this.priceRef.current.value),\r\n      status:this.statusRef.current.value,\r\n      desc:this.descRef.current.value,\r\n      image:this.imageRef.current.value\r\n    }\r\n    this.props.addFish(fish)\r\n    event.currentTarget.reset() //used to reset the form\r\n    // console.log(this.props.addFish(fish));\r\n  }\r\n  render(){\r\n    return(\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\"ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>\r\n        <input name=\"price\"ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh</option>\r\n          <option value=\"unavailable\">Sold Out</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef}/>\r\n        <input name=\"image\"ref={this.imageRef} type=\"text\" placeholder=\"Image\"/>\r\n        <button type=\"submit\">+ Add Fish </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default AddFishForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish:PropTypes.shape({\r\n      image:PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc:PropTypes.string,\r\n      status:PropTypes.string,\r\n      price:PropTypes.number\r\n    }),\r\n    index:PropTypes.string,\r\n    updateFish: PropTypes.func\r\n\r\n  }\r\n  handleChange=(event)=>{\r\n    // console.log(event.currentTarget.value);\r\n    // console.log(event.currentTarget.name);\r\n    const updatedFish={\r\n      ...this.props.fish,\r\n      [event.currentTarget.name] : event.currentTarget.value\r\n    }\r\n    this.props.updateFish(this.props.index,updatedFish)\r\n  }\r\n  delFish = ()=> this.props.deleteFish(this.props.index)\r\n  render(){\r\n    return(\r\n      <div className=\"fish-edit\">\r\n        <input type='text'onChange={this.handleChange} name='name'value={this.props.fish.name}/>\r\n        <input type='text' onChange={this.handleChange}name='price'value={this.props.fish.price}/>\r\n        <select name='status'onChange={this.handleChange}value={this.props.fish.status}>\r\n          <option value=\"available\">Fresh</option>\r\n          <option value=\"unavailable\">Sold Out</option>\r\n        </select>\r\n        <textarea onChange={this.handleChange}name='desc'value={this.props.fish.desc}/>\r\n        <input onChange={this.handleChange} type='text' name='image'value={this.props.fish.image}/>\r\n        <button onClick={this.delFish}>Remove Fish</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default EditFishForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Login =props=>(\r\n  <nav className='login'>\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory</p>\r\n    <button className=\"github\" onClick={()=>props.authenticate('Github')}>Log in with Github</button>\r\n    <button className=\"twitter\" onClick={()=>props.authenticate('Twitter')}>Log in with Twitter</button>\r\n    <button className=\"facebook\" onClick={()=>props.authenticate('Facebook')}>Log in with Facebook</button>\r\n  </nav>\r\n)\r\n//Remember that since this is a stateless functional component, the 'this' keyword doesn't apply\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired\r\n}\r\nexport default Login\r\n","import Rebase from 're-base' //allows us to mirror react state to firebase\r\nimport firebase from 'firebase'//google backend service for apps\r\n//got this from firebase project overview app settings\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDqjVplVRXZtWbXmAhIpCmBh_3__ayVmpw\",\r\n    authDomain: \"catch-of-the-day-f804a.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-f804a.firebaseio.com\"\r\n  })\r\nconst base = Rebase.createClass(firebaseApp.database())\r\nexport {firebaseApp}\r\nexport default base\r\n","import React from 'react'\r\nimport AddFishForm from './AddFishForm'\r\nimport EditFishForm from './EditFishForm'\r\nimport PropTypes from 'prop-types'\r\nimport Login from './Login'\r\nimport firebase from 'firebase'\r\nimport base, {firebaseApp} from '../base'\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes={\r\n    fishes: PropTypes.shape({\r\n      image:PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc:PropTypes.string,\r\n      status:PropTypes.string,\r\n      price:PropTypes.number\r\n    }),\r\n    addFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n    storeId: PropTypes.string\r\n  }\r\n  state = {\r\n    uid:null,\r\n    owner:null\r\n  }\r\n  componentDidMount(){\r\n    //will log you in automatically\r\n    firebase.auth().onAuthStateChanged(user=>{\r\n      if(user){\r\n        this.authHandler({user})\r\n      }\r\n    })\r\n  }\r\n  authenticate = (provider)=>{\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]()\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler)\r\n  }\r\n  authHandler= async (authData)=>{\r\n    //console.log(authData) has bunch of info about the user\r\n    //look up current store\r\n    const store= await base.fetch(this.props.storeId,{context:this})\r\n    //claim if no owner\r\n    if(!store.owner){\r\n      await base.post(`${this.props.storeId}/owner`,{data:authData.user.uid})\r\n    }\r\n    //set the state of the inventory component to reflect current user, this state is only relevant to this component so it can live here\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner||authData.user.uid\r\n    })\r\n  }\r\n  logout = async ()=>{\r\n    await firebase.auth().signOut()\r\n    this.setState({uid:null})\r\n  }\r\n  render(){\r\n    const logout = <button onClick={this.logout}>Log Out!</button>\r\n    if(!this.state.uid){\r\n      return <Login authenticate={this.authenticate} />\r\n    }\r\n    if(this.state.uid!=this.state.owner){\r\n      return (\r\n        <div>\r\n          <p>Sorry, you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      )\r\n    }\r\n    return(\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(fish=> <EditFishForm key={fish} updateFish={this.props.updateFish} index={fish} deleteFish={this.props.deleteFish} fish={this.props.fishes[fish]} />)}\r\n        <AddFishForm addFish={this.props.addFish}/>\r\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Inventory\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//functional components are good for when you have components that only get passed information and render out some jsx\r\nconst Header=props=>(\r\n    <header className=\"top\">\r\n      <h1>\r\n        Catch\r\n        <span className=\"ofThe\">\r\n          <span className=\"of\">of</span>\r\n          <span className=\"the\">The</span>\r\n        </span>\r\n        Day\r\n      </h1>\r\n      <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>\r\n      </h3>\r\n    </header>\r\n  )\r\nHeader.propTypes ={\r\n  tagline: PropTypes.string.isRequired\r\n}\r\n// class Header extends React.Component {\r\n//   render(){\r\n//     return(\r\n//       <header className=\"top\">\r\n//         <h1>\r\n//           Catch\r\n//           <span className=\"ofThe\">\r\n//             <span className=\"of\">of</span>\r\n//             <span className=\"the\">The</span>\r\n//           </span>\r\n//           Day\r\n//         </h1>\r\n//         <h3 className=\"tagline\">\r\n//         <span>{this.props.tagline}</span>\r\n//         </h3>\r\n//       </header>\r\n//     )\r\n//   }\r\n// }\r\nexport default Header\r\n","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {formatPrice} from '../helpers'\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes={\r\n    details: PropTypes.shape({\r\n      image:PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc:PropTypes.string,\r\n      status:PropTypes.string,\r\n      price:PropTypes.number\r\n    }),\r\n    addToOrder: PropTypes.func,\r\n    index: PropTypes.string\r\n  }\r\n  addOrder =()=>{\r\n    this.props.addToOrder(this.props.index)\r\n  }\r\n  render(){\r\n    const {image,name,price,desc,status} = this.props.details\r\n    const isAvailable = status === 'available'\r\n    return(\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button onClick={this.addOrder} disabled={!isAvailable}>{isAvailable? 'Add to Order': 'Sold Out'}</button>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Fish\r\n","import React from 'react'\r\nimport Order from './Order'\r\nimport Inventory from './Inventory'\r\nimport Header from './Header'\r\nimport sampleFishes from '../sample-fishes'\r\nimport Fish from './Fish'\r\nimport base from '../base'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  }\r\n  static propTypes: {\r\n    match: PropTypes.object\r\n  }\r\n  componentDidMount(){ //btw this counts as an update so it triggers didUpdate\r\n    //this will load almost immediately from localStorage but the fish state will take some time to load which will mess up order.js, made fix there because this cannot be async awaited for some reason\r\n    const localStorageRef = localStorage.getItem(this.props.match.params.storeId)\r\n    if(localStorageRef) this.setState({order:JSON.parse(localStorageRef)})\r\n    //any changes in the app or any changes in the database will be relfected on each other\r\n    this.ref= base.syncState(`${this.props.match.params.storeId}/fishes`,{\r\n      context: this,\r\n      state: 'fishes'\r\n    })\r\n  }\r\n  componentDidUpdate(){\r\n    localStorage.setItem(this.props.match.params.storeId,JSON.stringify(this.state.order))//key,value value needs to be a string\r\n  }\r\n  componentWillUnmount(){\r\n    base.removeBinding(this.ref) //do this so no further changes after leaving the store\r\n  }\r\n  addFish = fish =>{ //never directly modify state\r\n    //make a copy\r\n    const fishes = {...this.state.fishes}\r\n    fishes[`fish${Date.now()}`] = fish //making them unique\r\n    this.setState({fishes}) //fishes:fishes\r\n  }\r\n  updateFish = (key,updatedFish)=>{\r\n    const fishes= {...this.state.fishes}\r\n    fishes[key] = updatedFish\r\n    this.setState({fishes})\r\n  }\r\n  deleteFish=key=>{\r\n    const fishes = {...this.state.fishes}\r\n    //normally you'd remove it by deleting fishes[fish] with the delete keyword, but to remove from firebase as well, you have to set to null\r\n    fishes[key]=null\r\n    this.setState({fishes})\r\n  }\r\n  loadSampleFishes=()=>{\r\n    this.setState({fishes:sampleFishes})\r\n  }\r\n  addToOrder=key=>{\r\n    const order = {...this.state.order}\r\n    order[key] = order[key]+1 || 1\r\n    this.setState({order})\r\n  }\r\n  removeFromOrder=key=>{\r\n    const order = {...this.state.order}\r\n    delete order[key]//since we aren't using firebase, this is correct here\r\n    this.setState({order})\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key=><Fish addToOrder={this.addToOrder} index={key} key={key} details={this.state.fishes[key]}/>)}\r\n          </ul>\r\n        </div>\r\n        <Order removeFromOrder={this.removeFromOrder} fishes={this.state.fishes} order={this.state.order}/>\r\n        <Inventory storeId={this.props.match.params.storeId} deleteFish={this.deleteFish} updateFish={this.updateFish} fishes={this.state.fishes} loadSampleFishes={this.loadSampleFishes} addFish={this.addFish}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\n\r\nconst NotFound = ()=>(\r\n  <div>\r\n    <h2>Not Found!!</h2>\r\n  </div>\r\n)\r\nexport default NotFound\r\n","import React from 'react'\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\r\nimport StorePicker from './StorePicker'\r\nimport App from './App'\r\nimport NotFound  from './NotFound'\r\nconst Router =()=>(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker}/>\r\n      <Route path =\"/store/:storeId\" component={App}/>\r\n      <Route component={NotFound}/>\r\n    </Switch>\r\n  </BrowserRouter>\r\n)\r\nexport default Router\r\n","// let's go!\r\nimport React from 'react'\r\n// import {Component} from 'react'\r\nimport {render} from 'react-dom'\r\nimport \"./css/style.css\"\r\nimport Router from './components/Router'\r\n\r\n\r\nrender(<Router/>,document.querySelector('#main'))\r\n"],"sourceRoot":""}